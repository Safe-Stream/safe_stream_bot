services:
  safe-stream-bot:
    build: .
    container_name: safe-stream-bot
    hostname: safe-stream-bot
    env_file:
      - .env
    networks:
      - safe-stream-network
    volumes:
      - ./locales:/app/locales
    restart: unless-stopped
    depends_on:
      safe-stream-db:
        condition: service_healthy

  safe-stream-db:
    image: postgres:17
    container_name: safe-stream-db
    hostname: safe-stream-db
    env_file:
      - .env
    volumes:
      - safe-stream-db-data:/var/lib/postgresql/data
    networks:
      - safe-stream-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 20

networks:
  safe-stream-network:
    driver: bridge

volumes:
  safe-stream-db-data:
    name: safe-stream-db-data
